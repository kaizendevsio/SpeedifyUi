@* Confirmation Modal Component *@
@if (IsVisible)
{
    <div class="modal-backdrop" @onclick="HandleBackdropClick">
        <div class="modal-content" @onclick:stopPropagation="true">
            <h3 class="modal-title">@Title</h3>
            <p class="modal-message">@Message</p>
            <div class="modal-buttons">
                <button class="modal-button-cancel" @onclick="HandleCancel">
                    @CancelText
                </button>
                <button class="modal-button-confirm @ConfirmButtonClass" @onclick="HandleConfirm">
                    @ConfirmText
                </button>
            </div>
        </div>
    </div>
}

<style>
    .modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.75);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
        backdrop-filter: blur(2px);
    }

    .modal-content {
        background-color: #1e293b; /* slate-800 */
        border: 1px solid #334155; /* slate-700 */
        border-radius: 0.75rem;
        padding: 1.5rem;
        max-width: 500px;
        width: 90%;
        box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.5);
        animation: modalFadeIn 0.2s ease-out;
    }

    @@keyframes modalFadeIn {
        from {
            opacity: 0;
            transform: scale(0.95);
        }
        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    .modal-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: #f1f5f9; /* slate-100 */
        margin: 0 0 1rem 0;
    }

    .modal-message {
        color: #cbd5e1; /* slate-300 */
        margin: 0 0 1.5rem 0;
        line-height: 1.5;
    }

    .modal-buttons {
        display: flex;
        gap: 0.75rem;
        justify-content: flex-end;
    }

    .modal-button-cancel,
    .modal-button-confirm {
        padding: 0.625rem 1.25rem;
        border-radius: 0.375rem;
        font-weight: 600;
        border: none;
        cursor: pointer;
        transition: all 0.2s;
        font-size: 0.875rem;
    }

    .modal-button-cancel {
        background-color: #475569; /* slate-600 */
        color: #f1f5f9; /* slate-100 */
    }

    .modal-button-cancel:hover {
        background-color: #64748b; /* slate-500 */
    }

    .modal-button-confirm {
        color: white;
    }

    /* Confirm button variants */
    .modal-button-confirm.btn-red {
        background-color: #dc2626; /* red-600 */
    }

    .modal-button-confirm.btn-red:hover {
        background-color: #b91c1c; /* red-700 */
    }

    .modal-button-confirm.btn-orange {
        background-color: #ea580c; /* orange-600 */
    }

    .modal-button-confirm.btn-orange:hover {
        background-color: #c2410c; /* orange-700 */
    }

    .modal-button-confirm.btn-blue {
        background-color: #2563eb; /* blue-600 */
    }

    .modal-button-confirm.btn-blue:hover {
        background-color: #1d4ed8; /* blue-700 */
    }

    .modal-button-confirm.btn-purple {
        background-color: #9333ea; /* purple-600 */
    }

    .modal-button-confirm.btn-purple:hover {
        background-color: #7e22ce; /* purple-700 */
    }
</style>

@code {
    /// <summary>
    /// Controls whether the modal is visible
    /// </summary>
    [Parameter]
    public bool IsVisible { get; set; }

    /// <summary>
    /// The title displayed at the top of the modal
    /// </summary>
    [Parameter]
    public string Title { get; set; } = "Confirm Action";

    /// <summary>
    /// The message/question displayed in the modal
    /// </summary>
    [Parameter]
    public string Message { get; set; } = "Are you sure you want to proceed?";

    /// <summary>
    /// Text for the confirm button
    /// </summary>
    [Parameter]
    public string ConfirmText { get; set; } = "Confirm";

    /// <summary>
    /// Text for the cancel button
    /// </summary>
    [Parameter]
    public string CancelText { get; set; } = "Cancel";

    /// <summary>
    /// CSS class for styling the confirm button (e.g., "btn-red", "btn-orange", "btn-blue")
    /// </summary>
    [Parameter]
    public string ConfirmButtonClass { get; set; } = "btn-blue";

    /// <summary>
    /// Callback invoked when user confirms (true) or cancels (false)
    /// </summary>
    [Parameter]
    public EventCallback<bool> OnConfirm { get; set; }

    private async Task HandleConfirm()
    {
        await OnConfirm.InvokeAsync(true);
    }

    private async Task HandleCancel()
    {
        await OnConfirm.InvokeAsync(false);
    }

    private async Task HandleBackdropClick()
    {
        // Clicking the backdrop acts as cancel
        await HandleCancel();
    }
}